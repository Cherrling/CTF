# flag.py

from Crypto.Util.number import *
from Crypto.Cipher import AES
from random import randint, getrandbits
from hashlib import sha256, md5
from secret import flag


def pad(x):
    return x + b"\x00" * (16 - len(x) % 16)

def sign(message, sk):
    global state
    new_state = sum([state[i] * c[i] for i in range(t+1)]) % N
    state = [1] + state[2:] + [new_state]
    nonce = new_state
    r = pow(g, nonce, p) % q
    s = inverse(nonce, q) * (sk * r + int(sha256(message).hexdigest(), 16)) % q
    return r, s

p = getPrime(1024)
q = getPrime(200)
g = 3
N = getPrime(320)
sk = getrandbits(200)
n = 6
t = 3
state = [1] + [randint(0, N) for i in range(t)]
c = [getrandbits(320) for i in range(t+1)]
messages = [b"114514" * (i+1) for i in range(n)]

aes = AES.new(key = md5(long_to_bytes(sk)).digest(), mode = AES.MODE_ECB) # decrypt sk
enc = bytes_to_long(aes.encrypt(pad(flag)))

R = []
S = []
for i in range(n):
    ri, si = sign(messages[i], sk)
    R.append(ri)
    S.append(si)

print(f"p = {p}")
print(f"q = {q}")
print(f"N = {N}")
print(f"c = {c}")
print(f"R = {R}")
print(f"S = {S}")
print(f"enc = {enc}")








""" 
p = 114545871413422042762642392165723728022140246551896990961829466344933068996829392144290882327551443571301505264915248010711154390349883568165544755677329816558953899019151117375119040471213687048906678378095956349652977551153316796588513446629485279128752897570879172903259324870038540007432602486292334434557
q = 1172337943701282264623005219627249769722353489252458306682073
N = 1404362806347096622142691271789286301715768814594534883750158304118265717601172554568409888390929
c = [2092937644311250507067119622323205674991742575144405831530467144210744626047856773233560280823127, 1826471010570451675215462943321986709259649367344729411282541433279100040629262179501972321617539, 1060754104977279429299347888935054150200349776328985452237025183744534052041468922550155039278665, 1864541161306924983592010087012161206967937064828021534375034054703841428049401947478990952681963]
R = [1020418102560886162908493656385949064716222430905903040104130, 766915965214038153833293981381177421837260399875278596575130, 188502773111586829741142565585726937914876613891810176479608, 217657021834934733509773086905854511801594913614452363169723, 319758284616990557328211325212272136469939026578323921785094, 1050311778761721473767354614748688382010934244402618974763852]
S = [563467419009015723304377399351931667503899735719323096965868, 356936187378018273130463086071424656887688344814743551517714, 605750470894571964183291207777673571385514169949168574387181, 2095073814972565278375081035574360430175452569665390891263, 579910538431635707907004677540277462076773028335351979759331, 1155774728620579475823834623000234399299651816287556240351670]
enc = 19083409007247934937301298794556494284111091330090889715717376492493073685813066979743059711444828570381546467022800
"""